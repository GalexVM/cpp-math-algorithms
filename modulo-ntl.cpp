#include <iostream>
using std::cout;
using std::endl;
using std::cin;
#include <NTL/ZZ.h>
using NTL::ZZ;
using NTL::conv;

void moduloNTL(ZZ dividendo, ZZ divisor){
	ZZ cociente=dividendo/divisor; //Definir cociente
	ZZ residuo=dividendo-(cociente*divisor);//Definir residuo
	if(residuo<0 && divisor>0){//Si el residuo es negativo y el divisor positivo
		residuo=divisor+residuo;
		cociente-=1;
	}else if(residuo<0 && divisor<0){//Si el residuo es negativo y el divisor negativo
		residuo=(-divisor)+residuo;
		cociente+=1;
	}
	std::cout<<"cociente: "<<cociente<<std::endl<<"residuo: "<<residuo<<std::endl;
}
int main() {
   moduloNTL(conv<ZZ>("-3154360508089155686006116102674532223311804496630705012766789780258873093035648960902028377330359573439360304040709611680312926791204604225259190882547069551702201857446476446365913956039077139859521037897029929607939969657754279777608519816021790557982605779191485375770410854006531065940989134182619194108910328761427614384265680168702436158055353817368085575327152065503449201282951293368653592249428855728328570085608325465527807299418997886669564257133778646133622975179244826297766342570153912551295244477112157265318605522919818812202867788738471256579567866239080303516191041602250923456136411969317991537854"),conv<ZZ>("15263191649399552396770440154718263190231724959221331219598009343128180212452398906723908494897612955157901803449377975876246372019465344502604143600599043087819501714885084651187707741669084725958810372750282076597255204802263896490299709307148841365148929728765013267794823181886197704032557149701804783742489836912655624820218258742509989419322056431456563498633625627585854349134169405089898055537365761294162118592050872456898939397842424991548643989605202599690910054427115634098225771759916874526992929962297898564143589128638861765890510640947928205791763479301836341313164950380443848915489103096004025345411"));
   return 0;
}
